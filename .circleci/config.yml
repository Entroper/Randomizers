defaults: &defaults
  working_directory: ~/ff1randomizer
  docker:
    - image: fiendsoftheelements/netlify-build:alpine

version: 2
jobs:
  build:
    working_directory: ~/ff1randomizer
    docker:
      - image: fiendsoftheelements/netlify-build:alpine
    steps:
      - checkout
      - run:
          name: publish
          command: |
            set -ex
            cd FF1Blazorizer
            
            sed -i "s/SHA/${CIRCLE_SHA1}/" wwwroot/FFRVersion.cs
            sed -i "s/BRANCH/${CIRCLE_BRANCH}/" wwwroot/FFRVersion.cs
            echo  "$(wwwroot/FFRVersion.cs)"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sed -i 's/SHA//' wwwroot/FFRVersion.cs
              sed -i 's/NAME_LONG/FFRandomizer/g' wwwroot/manifest.published.json
              sed -i 's/NAME_SHORT/FFR/g' wwwroot/manifest.published.json
              color=$(grep "DARK_BACKGROUND_COLOR: #.*" wwwroot/css/main.css | grep -o "#[0-9a-fA-F]*")
              sed -i "s/DARK_BACKGROUND_COLOR/$color/g" wwwroot/manifest.published.json
              sed -i "s/DARK_BACKGROUND_COLOR/$color/g" wwwroot/index.html
              sed -i 's/SITE_ICON_COLOR/normal/g' wwwroot/manifest.published.json
              sed -i 's/SITE_ICON_COLOR/normal/g' wwwroot/index.html
              mv -f wwwroot/manifest.published.json wwwroot/manifest.json
              dotnet publish -c Release -o output
            elif [ "${CIRCLE_BRANCH}" == "dev" ]; then
              sed -i 's/NAME_LONG/FFRandomizer - beta/g' wwwroot/manifest.published.json
              sed -i 's/NAME_SHORT/FFR β/g' wwwroot/manifest.published.json
              color=$(grep "DARK_BACKGROUND_COLOR: #.*" wwwroot/css/beta.css | grep -o "#[0-9a-fA-F]*")
              sed -i "s/DARK_BACKGROUND_COLOR/$color/g" wwwroot/manifest.published.json
              sed -i "s/DARK_BACKGROUND_COLOR/$color/g" wwwroot/index.html
              sed -i 's/main.css/beta.css/g' wwwroot/css/site.css
              sed -i 's/SITE_ICON_COLOR/cyan/g' wwwroot/manifest.published.json
              sed -i 's/SITE_ICON_COLOR/cyan/g' wwwroot/index.html
              mv -f wwwroot/manifest.published.json wwwroot/manifest.json
              dotnet publish -c Debug -o output
            elif [ "${CIRCLE_BRANCH}" == "alpha" ]; then
              sed -i 's/NAME_LONG/FFRandomizer - alpha/g' wwwroot/manifest.published.json
              sed -i 's/NAME_SHORT/FFR α/g' wwwroot/manifest.published.json
              color=$(grep "DARK_BACKGROUND_COLOR: #.*" wwwroot/css/alpha.css | grep -o "#[0-9a-fA-F]*")
              sed -i "s/DARK_BACKGROUND_COLOR/$color/g" wwwroot/manifest.published.json
              sed -i "s/DARK_BACKGROUND_COLOR/$color/g" wwwroot/index.html
              sed -i 's/main.css/alpha.css/g' wwwroot/css/site.css
              sed -i 's/SITE_ICON_COLOR/red/g' wwwroot/manifest.published.json
              sed -i 's/SITE_ICON_COLOR/red/g' wwwroot/index.html
              mv -f wwwroot/manifest.published.json wwwroot/manifest.json
              dotnet publish -c Debug -o output
            else
              dotnet publish -c Debug -o output
            fi
      - persist_to_workspace:
          root: ~/ff1randomizer/FF1Blazorizer/output
          paths:
            - wwwroot

  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/ff1randomizer/FF1Blazorizer/output
      - run:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              netlify deploy --dir=/root/ff1randomizer/FF1Blazorizer/output/wwwroot --prod --site=cd1fef70-df7f-44ab-b1c8-3239dae773ac
            elif [ "${CIRCLE_BRANCH}" == "dev" ]; then
              netlify deploy --dir=/root/ff1randomizer/FF1Blazorizer/output/wwwroot --prod --site=b1e4219e-dfb6-4efa-924f-3136bbf3fa26
            else
              netlify deploy --dir=/root/ff1randomizer/FF1Blazorizer/output/wwwroot --prod --site=61141991-cfa6-4a2e-ab6b-187b1611a2e4
            fi
         


workflows:
  version: 2
  main:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - dev
                - alpha
